/*
# Functions

The functions provided here are helpers throughout the project and must be as
generally applicable as possible. Everything molecule or organism specific must
be put into their own respective files.

For all rem calculations we need to set a base value here instead of the expected
layout partial.

## @function strip-unit($value)
This function removes units from values given to i. e. a mixin. This helps makes
mixins easier to use, as values can be given to them with or without units.

The logic behind it is easy: to strip the unit you have to divide the given value
by 1 of the same unit, i. e. `42px / ((42px * 0) + 1) equals 42px / 1px = 42`.

Credit to Hugo Giraudel: http://hugogiraudel.com/2013/08/12/sass-functions/

## @function convert-to-rem($value, $base-value: $rem-base)

This function converts any value it is given to rems.
Provided/inspired by: https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss

@TODO: check to see that `$value` indeed is convertible.

## @function rem-calc($values, $base-value: $rem-base)

Used to calculate rems. New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem's. Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported: `rem-calc(10 20 30px 40);`

Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets: `rem-calc((10, 20, 30, 40px));`

Optionally call with a different base (eg: 8px) to calculate rem. `rem-calc(16px 32px 48px, 8px);`

Provided/inspired by: https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss

The rem-calc function depends/uses the convert-to-rem function which in turn needs strip-unit. Therefore only the usecase for the rem-calc function is shown here.
*/

$rem-base: 16px !default;

/// This function removes units from values given to i. e. a mixin. This eases mixin usage, as values can be given to them with or without units.
///
/// The logic behind it is easy: to strip the unit you have to divide the given value by 1 of the same unit, i. e. `42px / ((42px * 0) + 1) equals 42px / 1px = 42`.
///
/// @author Hugo Giraudel
///
/// @link http://hugogiraudel.com/2013/08/12/sass-functions/
/// Original documentation by the author.
///
/// @example scss
///   strip-unit(42px)
///   // 42
///
/// @param {string} - Input measurement with unit
/// @returns {number} - Unitless value
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base) {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
 }

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $rem-values: ();
  @for $i from 1 through $max {
    $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $rem-values;
}
