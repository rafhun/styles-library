////
/// @author Raphael HÃ¼ni
/// @group Molecules - Navigation
////
//
// Navbar
//
// Styles the navigation bar as part of the header. Includes an optional flyout navigation for submenus, current states as well as hover states and icon capability.
//
// Markup: navbar.html
//
// Style guide: molecules.navbar

/// We have one mixin that contains all styles for the navbar. It is adjustable to your personal needs and is tailored to fit the model given in the actual Navbar style file.
///
/// This mixin enables you to individually assign element selectors to fit your CMS or templates. The `container-class` is added to the `nav` element containing the navigation while the `menu-class` is given to the actual `ul` containing the navigation.
///
/// Often we want to assign different styles to the current navigation item. To do this add the class implying which item is current to the `$current` variable.
///
/// If the menu should be more than one level deep with a hover flyout menu you can set the `$has-submenu` variable to true and tell the mixin the class of these submenu lists by setting `$submenu`.
///
/// To use an icon instead of text for the home link you can add these styles by setting `$has-home-icon` to true. You then can choose the class assigned to the home link with `$home-item-class`.
///
/// The mixin has one other mixin dependency which is `text-ellipsis`. Take care to include this in your `dependencies/mixins` file or remove it from the styles below.
///
/// Also there are several configuration variables required that set up the styling. In the default state of this config file all variables necessary are defined right below. Be very careful if you choose to delete them.
///
/// The mixin's default values are giving you the correct classes for a standard Wordpress menu. Change them according to your design and navigation architecture.
///
/// @param {String} $container-class ['.navbar'] - Class that is used for the `nav` element.
/// @param {String} $menu-class ['.navbar-list'] - Class that is used for the `ul` element.
/// @param {String} $current ['.current-menu-item'] - Class that indicates the current state (usually given by CMS in use).
/// @param {Boolean} $has-submenu [true] - Adds styles for a flyout submenu if set to `true`.
/// @param {String} $submenu ['.children'] - Class that is used for submenu `ul` elements.
/// @param {Boolean} $has-home-icon [true] - Indicates whether an icon is used for the home link.
/// @param {String} $home-item-class ['.menu-item-home'] - Class that is used to indicate the home link `li` element (usually given by CMS in use).
///
/// @requires text-ellipsis
///
/// @example scss - Basic WP Navbar without submenus and with home icon
///   @include navbar(
///     // all other parameters are defaulting to WordPress default classes
///     $has-submenu: false
///   );
///
///
/// @todo maybe include all configuration variables in the mixin configuration?
///
/// @since 0.1.0
///

@mixin navbar(
  $container-class: '.navbar',
  $menu-class: '.navbar-list',
  $current: '.current-menu-item',
  $has-submenu: true,
  $submenu: '.children',
  $has-home-icon: true,
  $home-item-class: '.menu-item-home'
) {
  #{$container-class} {
    // do not show the navigation bar for small screens as we use the off canvas navigation or some other alternative for those
    display: none;

    height: $navbar-height;

    border-bottom: $navbar-border;

    background-color: $navbar-color-background;

    // these two are very design specific configurations, check whether they are actually needed if not comment them out or delete them

    box-shadow: inset $navbar-shadow;

    // we go to the navbar from this width
    @include susy-media(go-desktop) {
      display: block;
    }

    // the submenu has to be defined within this container context to make sure it is only restyled for this instance of it
    @if $has-submenu {
      #{$submenu} {
        // position the menu outside of the viewport so it is not visible
        position: absolute;
        left: -9999px;

        min-width: $navbar-width-dropdown;

        padding: $navbar-padding;

        // transition for how the submenu should appear on hover
        transition: $navbar-transition-dropdown;

        background-color: $navbar-color-background;

        list-style: none;

        box-shadow: $navbar-shadow-dropdown;

        // set opacity to 0 so we can animate/transition for the hover state
        opacity: 0;

        // make sure menu goes over all possible default elements (like checkboxes)
        z-index: 1;
      }
    }
  }

  // namespace the ul and apply styles to its li and a elements
  #{$menu-class} {
    // stretch the ul over the whole container width
    width: 100%;

    list-style: none;

    // style the individual list items
    > li {
      display: inline-block;

      // we only need position relative if a submenu actually exists, also if it exists we show it upon hover on its parent
      @if $has-submenu {
        // helps with positioning of absolutely positioned submenus
        position: relative;

        &:hover #{$submenu} {
          // this makes the submenu appear
          left: 0;
          opacity: 1;
        }

        #{$submenu} li {
          // prevent sublevel items from wrapping and add ellipsis for overflow-x
          @include text-ellipsis;
        }
      }
    }

    a {
      display: block;
      height: $navbar-height;

      padding: $navbar-padding;

      color: $navbar-color-font;
      font-size: $navbar-font-size;
      line-height: $navbar-height;
      text-decoration: $navbar-link-text-decoration;

      &:hover,
      &:active,
      &:focus {
        color: $navbar-color-font-hover;
        font-weight: $navbar-font-weight-hover;
        text-decoration: $navbar-link-text-decoration-hover;
      }
    }

    // this defines the active/current item style of the top level navbar
    > li#{$current} {
      > a {
        height: $navbar-height-active;

        margin-top: $navbar-active-margin-top;

        border-top: $navbar-border;
        background-color: $navbar-color-background-active;
        box-shadow: $navbar-shadow-active;

        // should there be a change when you hover over an active item?
        &:hover,
        &:active,
        &:focus {
          color: $navbar-color-font;
          font-weight: normal;
        }
      }

      // style the active links in submenus
      @if $has-submenu {
        li#{$current} a {
          color: $navbar-color-font-hover;
          font-weight: $navbar-font-weight-hover;
        }
      }
    }
  }

  @if $has-home-icon {
    #{$home-item-class} a {
      width: $navbar-icon-home-size + $navbar-icon-home-spacing;

      // size and position the icon
      background-position: $navbar-icon-home-position;
      background-size: $navbar-icon-home-size;

      // hide text
      text-indent: -9999px;
    }
  }
}


// colors
$navbar-color-background: $color-secondary !default;
$navbar-color-background-active: $color-primary !default;

$navbar-color-font: $white !default;
$navbar-color-font-hover: $color-primary !default;

// typography
$navbar-font-size: rem-calc(16) !default;
$navbar-font-weight-hover: bold !default;

$navbar-link-text-decoration: none !default;
$navbar-link-text-decoration-hover: none !default;

// borders
$navbar-border: $color-primary rem-calc(4) solid !default;

// shadows
$navbar-shadow: rem-calc(0 -4 0 0) $color-lines !default;
$navbar-shadow-active: rem-calc(1 0 0 0) $color-lines !default;
$navbar-shadow-dropdown: rem-calc(2 2 0 0) $color-lines !default;

// sizing
$navbar-height: rem-calc(48) !default;
$navbar-height-active: rem-calc(52) !default;
$navbar-active-margin-top: rem-calc(-4) !default;
$navbar-padding: 0 .45rem !default;

// Dropdown Menu
$navbar-width-dropdown: rem-calc(270) !default;
$navbar-transition-dropdown: opacity .5s ease-in-out !default;

// Icons
$navbar-icon-home-size: 1rem !default;
$navbar-icon-home-position: center center !default;
$navbar-icon-home-spacing: 1.5rem !default;
