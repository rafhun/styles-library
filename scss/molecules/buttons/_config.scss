/*
# Button Logic

There are many variations of buttons on our website, all of which should be styled through the mixin defined here.

`$hover-changes` defines which properties should be transitioned on hover (usually this is the background color, however when working with gradients it might be the background-image).

You can find the markup examples on the Buttons page itself.

 */

@mixin button-base(
  $transition: $button-base-transition
) {
  // make sure the button is inline-block so the whole area (including the padded one) can be clicked
  display: inline-block;

  // remove standard button and input borders (reset)
  border-style: solid;
  border-width: 0;

  // we indicate that the whole button can be clicked by changing the cursor to a pointer
  cursor: pointer;

  // reset webkit and moz base styles
  -webkit-appearance: none;
  -moz-appearance: none;

  // create a smooth transition of the background-color on hover, focus and active states
  // the decision to set the transition through one variable makes it easily adjustable. This way it is i. e. no problem to define different transitions for several properties
  transition: $transition;
}

// @mixin fo button coloring and border
// set $bg to false for transparent buttons
@mixin button-colors(
  $bg: $button-base-background-color,
  $bg-hover: null,
  $bg-hover-treatment: $button-base-background-hover-treatment,
  $color: $button-base-color,
  $radius: false,
  $border-radius: null,
  $border-color: null
) {
  @if $bg {
    @if $bg-hover == null {
      $bg-hover: scale-color($bg, $lightness: $bg-hover-treatment);
    }

    @if $border-color == null {
      $border-color: scale-color($bg, $lightness: $bg-hover-treatment);
    }

    border-color: $border-color;

    background-color: $bg;
    color: $color;

    &:active,
    &:focus,
    &:hover {
      background-color: $bg-hover;
    }
  }

  @if $radius and $border-radius == null {
    $border-radius: $button-base-radius;

    border-radius: $border-radius;
  }
}

// @mixin to create button sizing
@mixin button-size(
  $padding-vertical: $button-base-padding-vertical,
  $padding-horizontal: $button-base-padding-horizontal,
  $full-width: false // or 'mobile', 'desktop', 'all' (usually solved through a concrete config variable)
) {
  @if $full-width == 'mobile' {
    @include susy-media(max-mobile) {
      width: 100%;
      padding: $padding-vertical 0;
    }
  } @elseif $full-width == 'desktop' {
    @include susy-media(go-desktop) {
      width: 100%;
      padding: $padding-vertical 0;
    }
  } @elseif $full-width == 'all' {
    width: 100%;
    padding: $padding-vertical 0;
  } @elseif not $full-width {
    // apply spacing around the text, the buttons size completely depends on this value for now, this also centers the text within the button
    padding: $padding-vertical $padding-horizontal;
  }
}

// @mixin for button text styles
@mixin button-text(
  $font-family: $button-base-font-family,
  $font-size: $button-base-font-size,
  $font-weight: $button-base-font-weight,
  $font-weight-hover: $button-base-font-weight-hover,
  $text-align: $button-base-text-align,
  $text-decoration: $button-base-text-decoration,
  $text-decoration-hover: $button-base-text-decoration-hover
) {
  // need to set this for button and input elements on Safari
  font-family: $font-family;
  font-size: $font-size;
  font-weight: $font-weight;
  // make sure no special line heights are inherited
  line-height: normal;
  text-align: $text-align;
  text-decoration: $text-decoration;

  &:hover,
  &:focus,
  &:active {
    font-weight: $font-weight-hover;
    // make sure we have the configured text-decoration
    text-decoration: $text-decoration-hover;
  }
}

// configure icons for buttons
// we use grunticon for icons. make sure to either add the icon class directly to the button or link them up through the grunticon config
@mixin button-icon(
  $icon: 'right', // or left (usually solved through button config variable though!)
  $icon-size: $button-base-icon-size,
  $icon-spacing: $button-base-icon-spacing,
  $icon-padding: $button-base-padding-horizontal
) {
  @if $icon == 'left' {
    padding-left: $icon-size + $icon-spacing + $icon-padding;

    background-position: left $icon-padding center;
    background-size: $icon-size;
  }@elseif $icon == 'right' {
    padding-right: $icon-size + $icon-spacing + $icon-padding;

    background-position: right $icon-padding center;
    background-size: $icon-size;
  }
}

$button-base-background-color: $color-background-secondary !default;
$button-base-background-hover-treatment: -10% !default;
$button-base-color: $color-text !default;
$button-base-font-family: $sans !default;
$button-base-font-size: rem-calc(18) !default;
$button-base-font-weight: normal !default;
$button-base-font-weight-hover: $button-base-font-weight !default;
$button-base-icon-size: 1.25rem !default;
$button-base-icon-spacing: rem-calc(12) !default;
$button-base-padding-horizontal: rem-calc(12) !default;
$button-base-padding-vertical: rem-calc(6) !default;
$button-base-radius: $border-radius !default;
$button-base-text-align: center !default;
$button-base-text-decoration: none !default;
$button-base-text-decoration-hover: none !default;
$button-base-transition: background-color .5s ease !default;
$button-base-vertical-align: middle !default;

// primary button
$button-primary-background-color: $color-primary !default;
$button-primary-hover-treatment: +10% !default;

// back button
$button-back-icon-position: 'left';

// forward button
$button-forward-icon-position: 'right';

// wide button
$button-wide-display: 'all';
