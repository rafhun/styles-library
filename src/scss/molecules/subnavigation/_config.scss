////
/// @group molecules - navigation
/// @author Raphael HÃ¼ni
////

// Subnavigation
//
// The subnavigation serves as secondary navigation element on a page. It exists in several basic forms but is mostly used either in typical list form in a sidebar next to the content or as a navigation bar directly under the main navigation. This styles library offers configurations for both solutions. As to not pollute the resulting CSS all is kept tidily in mixins and only applied if configured as wished.
//
// We have two examples to show two use cases. The first is for subnavigations with only one level the second is for ones with multiple levels.
//
// The molecule also offers the possibility to add icons to the left and right of the menu items. These icons should be added as indicated in the example below. This ensures nice spacing and lining up whether your nav items wrap or fit on one line. The disadvantage is the need to add classes to the `li` and `a` elements which might be more difficult in Worpress environments. We will have to look for a solution for this problem.
//
// @TODO: Icons in Wordpress Environments
// @TODO: Subnavigationbar definitions/styling
//
// Markup: subnavigation.html
//
// Style guide: molecules.subnavigation

/// Mixin to create the typical secondary navigation on a page (usually the subnavigation in a sidebar). Again it is created as flexible as possible and offers several customizable options which put in only the styles that indeed are needed for the subnavigation we are styling.
///
/// By namespacing the selectors great flexibility for the styles is given: we even can create a completely different UI element that has similar styling but does not work in the function of a subnavigation and just change one mixin parameter.
///
/// @param {String} $namespace ['.subnavigation'] - This is used as the main name of the styled subnavigations and allows us to create multiple variations of it.
/// @param {String} $subnavigation-class ['$namespace'] - Class assigned to the `nav` or otherwise containing element of the subnavigation.
/// @param {Boolean} $is-subnavbar [false] - Enables subnavbar specific styling such as not showing it when there is an off-canvas navigaton.
/// @param {String} $menu-class ['$namespace -list'] - Class of the `ul`.
/// @param {String} $item-class ['$namespace -item'] - Class of the `li` elements.
/// @param {String} $current ['.current-menu-item'] - Class to indicate the currently active page.
/// @param {Boolean} $has-submenu [false] - Enables submenu stylings.
/// @param {String} $submenu ['.children'] - Class of nested `ul` elements.
/// @param {Boolean} $has-icon-left [true] - Enables an icon to the left of every list item.
/// @param {String} $icon-left-selector ['$namespace -icon-left'] - Class on list items to indicate that there is an icon left.
/// @param {Boolean} $has-icon-right [true] - Enables an icon to the right of every list item.
/// @param {String} $icon-right-selector ['$namespace -icon-right'] - Class to indicate that there is an icon right.
/// @param {String} $icon-selector ['class^="icon-"'] - General icon selector
///
/// @example scss - Subnavigation with children and icons only to the left
///   @include subnavigation(
///     $is-subnavbar: true,
///     $has-submenu: true,
///     $has-icon-right: false
///     // for all other params we can use the default values
///   );
///
/// @since 0.1.0
///
@mixin subnavigation(
  $namespace: '.subnavigation',
  $subnavigation-class: '#{$namespace}',
  $is-subnavbar: false,
  $menu-class: '#{$namespace}-list',
  $item-class: '#{$namespace}-item',
  $current: '.current-menu-item',
  $has-submenu: false,
  $submenu: '.children',
  $has-icon-left: true,
  $icon-left-selector: '#{$namespace}-icon-left',
  $has-icon-right: true,
  $icon-right-selector: '#{$namespace}-icon-right',
  $icon-selector: '[class^="icon-"]'
) {
  #{$subnavigation-class} {
    @if $is-subnavbar {
      // do not show the subnavigation bar for small screens as we use the off canvas navigation for those
      display: none;

      height: $subnavigation-height;

      @include susy-media(go-desktop) {
        display: block;
      }
    }

    border-bottom: $subnavigation-border;

    background-color: $subnavigation-background;
  }

  #{$menu-class} {
    // stretch the ul over the whole container width
    width: 100%;

    list-style: none;

    @if $is-subnavbar {
      > #{$item-class} {
        display: inline-block;
      }
    }
  }

  #{$item-class} {
    transition: background-color .5s ease;

    border-top: $subnavigation-border;

    &:hover,
    &:active,
    &:focus {
      background-color: $subnavigation-link-background-current;
    }

    a {
      display: block;

      padding: $subnavigation-padding-vertical $subnavigation-padding-horizontal;

      color: $subnavigation-link-color;
      font-size: $subnavigation-link-font-size;
      font-weight: $subnavigation-link-font-weight;
      line-height: $subnavigation-link-line-height;
      text-decoration: $subnavigation-link-text-decoration;

      &:hover,
      &:active,
      &:focus {
        color: $subnavigation-link-color-hover;
        text-decoration: $subnavigation-link-text-decoration-hover;
      }
    }

    &#{$current} > a {
      background-color: $subnavigation-link-background-current;
    }

    // icon styling if they are enabled
    @if $has-icon-left {
      &#{$icon-left-selector} #{$icon-selector} {
        padding-left: $subnavigation-padding-horizontal + $subnavigation-icon-left-width + $subnavigation-icon-left-spacing;

        // make sure the icon goes over the padded area of the a element
        background-origin: padding-box;
        background-position: $subnavigation-icon-left-position;
        background-size: $subnavigation-icon-left-width $subnavigation-icon-left-height;
      }
    }

    @if $has-icon-right {
      &#{$icon-right-selector} {
        background-position: $subnavigation-icon-right-position;
        background-size: $subnavigation-icon-right-width $subnavigation-icon-right-height;

        a {
          // make room for the icon
          padding-right: $subnavigation-icon-right-spacing + $subnavigation-icon-right-width + $subnavigation-padding-horizontal;
        }
      }
    }
  }

  @if $has-submenu {
    #{$submenu} li a {
      padding-left: $submenu-children-indent;
    }
  }
}

$subnavigation-background: transparent !default;
$subnavigation-border: 1px solid $color-lines !default;

$subnavigation-padding-horizontal: rem-calc(6) !default;
$subnavigation-padding-vertical: .75rem !default;

$subnavigation-link-background-current: $color-background-secondary !default;
$subnavigation-link-color: $color-text !default;
$subnavigation-link-color-hover: $color-text !default;
$subnavigation-link-font-size: rem-calc(18) !default;
$subnavigation-link-font-weight: bold !default;
$subnavigation-link-line-height: 1.3333333 !default;
$subnavigation-link-text-decoration: none !default;
$subnavigation-link-text-decoration-hover: none !default;

$submenu-children-indent: rem-calc(36) !default;

$subnavigation-icon-left-position: left $subnavigation-padding-horizontal center !default;
$subnavigation-icon-left-width: rem-calc(30) !default;
$subnavigation-icon-left-height: $subnavigation-icon-left-width !default;
$subnavigation-icon-left-spacing: rem-calc(20) !default;

$subnavigation-icon-right-position: right $subnavigation-padding-horizontal center !default;
$subnavigation-icon-right-width: rem-calc(20) !default;
$subnavigation-icon-right-height: $subnavigation-icon-right-width !default;
$subnavigation-icon-right-spacing: rem-calc(16) !default;
